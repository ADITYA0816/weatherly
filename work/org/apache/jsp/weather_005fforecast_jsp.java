/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-11-07 06:48:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import models.WeatherData;

public final class weather_005fforecast_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("models.WeatherData");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"static/css/forecastpage.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"static/css/bootstrap.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"static/css/font-awesome.min.css\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("\t<link href=\"https://fonts.googleapis.com/css2?family=Catamaran:wght@100;500;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <title>CovidTracker</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar p-0 px-4\">\r\n");
      out.write("        <div class=\"brand-title\" style=\"font-family: 'Catamaran', sans-serif;\"><i class=\"fa fa-cloud mr-2\"></i>Weatherly</div>\r\n");
      out.write("        <a href=\"#\" class=\"toggle-button mt-2\">\r\n");
      out.write("            <span class=\"bar\"></span>\r\n");
      out.write("            <span class=\"bar\"></span>\r\n");
      out.write("            <span class=\"bar\"></span>\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"navbar-links\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\">Home</a></li>\r\n");
      out.write("                <li><a href=\"#\">About</a></li>\r\n");
      out.write("                <li><a href=\"#\">Contact</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    ");
 
		ArrayList<WeatherData> weatherDataList = (ArrayList<WeatherData>)request.getAttribute("weatherDataList");
		String cityName = (String)request.getAttribute("cityName");
		WeatherData weatherData = new WeatherData();
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"bg-img m-0 p-0\">\r\n");
      out.write("    \t<div class=\"row m-0 p-0\">\r\n");
      out.write("\t\t\t");
 for(WeatherData weatherForecastData : weatherDataList){ 
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"myCard m-2\" style=\"width: 363px\">\r\n");
      out.write("\t\t\t\t  \t<div>\r\n");
      out.write("\t\t\t\t\t    <h5 style=\"text-align: center; color: white\">");
      out.print( weatherForecastData.getDate());
      out.write("</h5>\r\n");
      out.write("\t\t\t\t\t    <div class=\"row pl-3 pt-3\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Temperature</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getTempMax());
      out.write(' ');
      out.write('/');
      out.write(' ');
      out.print( weatherForecastData.getTempMin());
      out.write(" C</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-3\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Pressure (sea/ground)</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getPressure());
      out.write(' ');
      out.write('/');
      out.write(' ');
      out.print( weatherForecastData.getGLevelPressure() );
      out.write(" hPa</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-2\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Humidity</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getHumidity());
      out.write(" %</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-2\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Visibility</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getVisiblility());
      out.write(" Mtr</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-2\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Weather</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getMain());
      out.write(' ');
      out.write('(');
      out.print( weatherForecastData.getDescription());
      out.write(")</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-2\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Clouds</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getCloud());
      out.write(" %</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t                \t<div class=\"row pl-3 pt-2\">\r\n");
      out.write("\t                \t\t<div class=\"col-7\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">Wind</h6>                \t\t\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t\t<div class=\"col-5\">\r\n");
      out.write("\t                \t\t\t<h6 class=\"light\">");
      out.print( weatherForecastData.getWindSpeed());
      out.write(" m/s ");
      out.print( weatherForecastData.getWindDir());
      out.write(" deg</h6>\r\n");
      out.write("\t                \t\t</div>\r\n");
      out.write("\t                \t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        const toggleButton = document.getElementsByClassName('toggle-button')[0]\r\n");
      out.write("        const navbarLinks = document.getElementsByClassName('navbar-links')[0]\r\n");
      out.write("\r\n");
      out.write("        toggleButton.addEventListener('click', () => {\r\n");
      out.write("            navbarLinks.classList.toggle('active')\r\n");
      out.write("        })\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
